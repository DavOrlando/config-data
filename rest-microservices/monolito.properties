#server.port=${PORT:${SERVER_PORT:0}}
server.port=${PORT:${SERVER_PORT:0}}
spring.application.name=monolito


spring.redis.host=myredis
spring.redis.port=6379
management.security.sessions=never
#===================================
### EUREKA
#===================================
eureka.client.serviceUrl.defaultZone=http://discUser:discPassword@eureka:8761/eureka/
eureka.instance.metadata-map.instanceId=${spring.application.name}:${random.value}
eureka.instance.appname=${spring.application.name}

#Per gestione della vista error
server.error.include-stacktrace=always

#===================================
### SPRING SECURITY
#===================================
#Mock Login - Utente Centro
#spring.security.user.name=rossi@quattrofontane
#spring.security.user.password=password

#===================================
### POSTGRES
#===================================
spring.jpa.database=POSTGRESQL
# DataSource settings: set here your own configurations for the database
# connection.
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://mypostgres/integrazioni
spring.datasource.username=postgres
spring.datasource.password=postgres

# create: crea lo schema all'avvio dell'applicazione
# create-drop: crea lo schema all'avvio dell'applicazione, ed alla fine lo distrugge
#spring.jpa.hibernate.ddl-auto=none
spring.jpa.hibernate.ddl-auto=none
# spring.jpa.hibernate.ddl-auto=create-drop

spring.jpa.show-sql=false
spring.cache.type=none

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL82Dialect
spring.jpa.hibernate.use-new-centroId-generator-mappings=true

# rimuove un warning noioso: see https://github.com/spring-projects/spring-boot/issues/12007
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

#===================================
### CREAZIONE AUTOMATICA DB
#===================================
it.uniroma3.integrazioni.db.auto-create=false
# it.uniroma3.integrazioni.db.auto-create=true

#===================================
### FILE UPLOAD
#===================================
# Enable multipart uploads
spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
spring.servlet.multipart.max-file-size=10MB
# Max Request Size
spring.servlet.multipart.max-request-size=15MB
## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
file.upload-dir=./uploads

#===================================
### ALTRI PARAMETRI
#===================================
it.uniroma3.integrazioni.presenze.giorni-per-modifica=3
it.uniroma3.integrazioni.paginazione.ospiti.current-page=1
it.uniroma3.integrazioni.paginazione.ospiti.page-size=4
